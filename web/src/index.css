
@import "./fonts.css";
@import "tailwindcss";

@theme{
  --header-height:6rem;
  --color-text: #364153;
  --color-background: #FEF8F4;
  --color-primary: ;
  --color-secondary: #e1bcc7;
  --color-accent: #f9436e;
  --color-cta: rgb(225, 5, 5, 0.9);
  --font-montserrat: "Montserrat", serif;
  --font-sans:  "bebas neue";
  --border-radius: 2rem;
  --animate-show : show;
  --animate-splash : splash;

@keyframes show {
  from {
    opacity: 0;
    scale: 0%;
  }

  to {
    opacity: 1;
    scale: 100%;
  }
}

@keyframes splash {
  0% {
    opacity: 0;
    scale: 0.2;
  }

  18% {
    opacity: 0;
    scale: 0.2;
  }

  22% {
    opacity: 1;
    scale: 1.15; /* Se expande un poco más del tamaño final */
  }
  25% {
    scale: 1; /* Vuelve al tamaño normal */
    opacity: 1;
  }

  100% {
    scale: 1; /* Vuelve al tamaño normal */
    opacity: 1;
  }
}

}

@layer base {

/* reset */
*, 
*::before, 
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

*:focus {
  outline: var(--color-accent) solid 4px;
  border-radius: var(--border-radius);
  outline-offset: 10px;
}
  body {
    background-color: var(--color-background);
    color: var(--color-text);
    font-family: var(--font-montserrat);
    line-height: 1.6;
    overflow-x: hidden;
    overscroll-behavior: none;
  }

  main {
    width: 80%;
    position: relative;
    margin: auto;
    max-width: 80rem;
  }

  section:not(:last-of-type) {
    margin-bottom: 11rem;
  }

  h1, h2, h3, h4, nav {
    font-family: var(--font-sans);
    text-transform: uppercase;
    
  }

  h1 {
    font-size: 3rem;
    margin: auto;
    text-align: center;
    margin-top: 4rem;
    margin-bottom: 4rem;
    font-weight: 700;
    color: #15080c;
    line-height: 1;
  }

  h2 {
    margin-bottom: 6rem;
    font-size: 3rem;
    color: #15080c;
    line-height: 1;
  }

  h3 {
    font-size: 1.875rem;
    margin-bottom: 1rem;
    color: #15080c;
    line-height: 1;
  }

  h4 {
    font-size: 1.5rem;
  }

  a {
    cursor: pointer;
  }

  label {
    font-weight: 700;
  }

  input, textarea {
    cursor: pointer;
    padding: 1em;
    background-color: #fbf6fb82;
    border: solid 2px transparent; 
    border-radius: var(--border-radius);
    box-shadow:
    inset 1px 1px 3px rgba(0,0,0,0.08),
    inset -1px -1px 2px rgba(255,255,255,0.4);
    transition: box-shadow 0.25s ease-in-out;
    
    &:is(input:hover:not(:focus), 
    textarea:hover:not(:focus)) {
    box-shadow:
    inset 2px 2px 4px rgba(0, 0, 0, 0.15),
    inset -1px -1px 3px rgba(255, 255, 255, 0.5);
    background-color: #f8f0ee;
    font-weight: 600;
    color: var(--color-text);
    }

    &:is(input:focus, textarea:focus) {
    outline: none;
    background-color: #ffe8e2;
    box-shadow:
    inset 4px 4px 8px rgba(0, 0, 0, 0.25),
    inset -2px -2px 4px rgba(255, 255, 255, 0.5);
    font-weight: 700;
    color: var(--color-text);
    }
  }

  nav ul:hover li:not(:hover) {
    opacity: 0.5;
  }

  p {
    font-weight: 400;
  }
}

@layer utilities {

  .grid-auto-fit {
    --grid-min-column-size: 300px;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--grid-min-column-size)), 1fr));
  }

    .grid-project-section {
    --grid-min-column-size: 500px;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--grid-min-column-size)), 1fr));
  }

  .animate-show {
    view-timeline-name: --image;
    view-timeline-axis: block;
    animation-timeline: --image;
    animation-name: show;
    animation-fill-mode: forwards;
    animation-duration: 0.6s;
    animation-range: entry 20% cover 35%;
    contain: layout paint;

  }


  .animate-splash > * {
    animation-timeline: view(y);
    contain: layout paint;
    animation-name: splash;
    animation-fill-mode:none;
    animation-duration: 0.6s;
    animation-timing-function: cubic-bezier(0.25, 1, 0.5, 1);
    @apply md:scale-0;
  }

  .animate-splash > *:nth-child(1) { animation-delay: 0s; }
  .animate-splash > *:nth-child(2) { animation-delay: 0.05s; }
  .animate-splash > *:nth-child(3) { animation-delay: 0.1s; }
  .animate-splash > *:nth-child(4) { animation-delay: 0.15s; }
  .animate-splash > *:nth-child(5) { animation-delay: 0.2s; }

  .button {
    display: inline-block;
    background-color: var(--color-cta);
    text-transform: uppercase;
    outline: 2px solid white; 
    font-weight: 700;
    color: white; 
    border-radius: 50px; 
    padding: 1em 2em; 
    cursor: pointer;
    transition: transform 200ms ease-in-out, box-shadow 200ms ease-in-out;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1),
    inset 1px 1px 2px rgba(255,255,255,0.3);
    
    &:hover,
    &:focus {
      transform: translateY(-10px);
      box-shadow:
      3px 6px rgb(225, 5, 5, 0.9),
      inset 0 0 0 transparent;
      outline-offset: 0;
    }

    &:focus-within {
      background-color: var(--color-accent);
      box-shadow: 3px 6px var(--color-accent), inset 0 0 0 transparent;
    }
  }

  .highlight {
    font-weight: 700;
    color: var(--color-accent);
  }

  .visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  overflow: hidden;
}

  .animated-underline {
    position: relative;   
    text-decoration: none;
    color: inherit;
    transition: color 300ms cubic-bezier(0.25, 0.8, 0.25, 1), opacity 300ms cubic-bezier(0.25, 0.8, 0.25, 1),  opacity 300ms cubic-bezier(0.25, 0.8, 0.25, 1);

    &::after {
      content: "";
      position: absolute;
      left: 50%;
      bottom: -2px;
      width: 0;
      height: 4px;
      transition: width 300ms cubic-bezier(0.25, 0.8, 0.25, 1), left 300ms cubic-bezier(0.25, 0.8, 0.25, 1);
    }
  }

  .scroll-line {
      height: 4px;
      background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
      transition: width 0.3s ease-out;
      z-index: 30;
    }

  /* scroll-line animation */
  @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

/* CAROUSEL with CSS https://developer.chrome.com/blog/carousels-with-css?hl=es-419  */

/* SCROLLER */
/* horizontal scroll snap */
.carousel {
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  overscroll-behavior-x: contain;
  
  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
  
  /* snap to center */  
  & li {
    scroll-snap-align: start;
  }
}

/* SCROLL BUTTONS */
/* create buttons by selecting them and adding content */
.carousel {
  &::scroll-button(*) {
    /* make them round and easy to press */
    inline-size: 48px;
    aspect-ratio: 1;
    border-radius: 1e3px;
    border: 2px solid #999;
    
    /* space from content */
    margin: 25px;
  }
  
  &::scroll-button(*):focus-visible {
    outline-offset: 5px;
  }
  
  &::scroll-button(*):not(:disabled):is(:hover, :active) {
    background-color: Canvas;
  }
  
  &::scroll-button(*):not(:disabled):active {
    scale: 90%;
  }
  
  &::scroll-button(left) {
    content: "⬅" / "Scroll Left";
    grid-area: left; /* place markers in parent grid area */
  }
  
  &::scroll-button(right) {
    content: "⮕" / "Scroll Right";
    grid-area: right;
  }
}

/* SCROLL MARKERS */
/* create marker group */
/* create markers for each item */
.carousel {
  /* create markers 'after' scroller */
  scroll-marker-group: after;

  /* create markers container and own dots layout */
  &::scroll-marker-group {
    grid-area: markers; /* place markers in parent grid area */
    
    /* 15px by 15px horizontal grid - size of dots */
    display: grid;
    place-content: safe center;
    grid: 30px / auto-flow 30px;
    gap: 15px;
    padding: 35px;
    scroll-padding: 15px;
    
    /* handle overflow */
    overflow: auto;
    overscroll-behavior-x: contain;
    scrollbar-width: none;
    scroll-snap-type: x mandatory;
    
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }

  /* a marker for each <li> */
  & > .content > li {
    /* create by adding content */
    &::scroll-marker {
      content: " "; /* empty content is fine, just like ::before */
      
      /* style it as you need */
      border: 1px solid #bbb;
      border-radius: 50%;
      outline-offset: 4px;
      -webkit-tap-highlight-color: transparent;
      
      /* snap if group is overflowing */
      scroll-snap-align: center;
    }
    
    &::scroll-marker:is(:hover, :focus-visible) {
      border-color: var(--color-accent);
    }
    
    &::scroll-marker:target-current {
      background: var(--color-accent);
      border-color: var(--color-accent);
    }
  }
}

.scroll-layout {
  display: grid;
/*     border: 1px dashed gray; */
    
    /* try a different layout =) */
    grid-template-areas: 
      "left scroll right"
      ". markers .";
    
    /* just place items in the grid */
    grid-template-areas: 
      "scroll scroll scroll"
      "left markers right";
    
    grid-template-columns: auto 1fr auto;

    .carousel {
      grid-area: scroll;
    }
  }
  
  .carousel {
    max-inline-size: 80cqi;
    overscroll-behavior-x: contain;
    scroll-behavior: smooth;
  }

  .content {
    display: grid;
    grid: 50vmin / auto-flow 80vmin;
    gap: 15px;
    padding: 0;
    margin: 0;

    > li {
      list-style-type: none;
      border: 3px solid #888;
    }
  }
}

@media(min-width: 768px) {

  .animated-underline:hover::after  {
      width: 100%;
      left: 0;
      background-color: currentColor;
    }
  }

@media(width >= 48rem) {
  p {
    font-size: 1.25rem;
  }

  h1 {
    font-size: 6rem;
  }

  h2 {
    font-size: 4.5rem;
    font-weight: 700;
  }
}